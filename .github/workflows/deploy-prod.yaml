name: deploy-prod

on:
  release:
    types: [published]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  SERVICE: web-app
  REGION: europe-west1

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA }}
        export_default_credentials: true

    - name: Authorize Docker push
      run: gcloud auth configure-docker

    - name: Build and Push Container
      run: |-
        docker build -t eu.gcr.io/${{ env.PROJECT_ID }}/web-app/${{ env.SERVICE }}:${{  github.sha }} .
        docker push eu.gcr.io/${{ env.PROJECT_ID }}/web-app/${{ env.SERVICE }}:${{  github.sha }}

    - uses: chrnorm/deployment-action@releases/v1
      name: Create GitHub deployment on production
      id: deployment
      with:
        token: "${{ env.GITHUB_TOKEN }}"
        target_url: https://bonout.com
        environment: production

    - name: Deploy to Cloud Run
      run: |-
        gcloud run deploy ${{ env.SERVICE }} \
          --region ${{ env.REGION }} \
          --image eu.gcr.io/${{ env.PROJECT_ID }}/web-app/${{ env.SERVICE }}:${{  github.sha }} \
          --platform "managed" \
          --quiet

    - name: Update deployment status (success)
      if: success()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: "${{ env.GITHUB_TOKEN }}"
        target_url: https://bonout.com
        state: "success"
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}

    - name: Discord notification
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      uses: Ilshidur/action-discord@master
      with:
        args: 'The project {{ EVENT_PAYLOAD.repository.full_name }} has been deployed to production.'
